# Use postgres/example user/password credentials
version: "3.1"

services:
  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data

  cache:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  server-1:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - database
    networks:
      - default
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - ENV=production
      - DATABASE_URL=postgres://postgres:postgres@database:5432/db?sslmode=disable

  server-2:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - database
    networks:
      - default
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - ENV=production
      - DATABASE_URL=postgres://postgres:postgres@database:5432/db?sslmode=disable

  caddy:
    image: caddy/caddy:2.7.3-alpine
    container_name: caddy-server
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config

volumes:
  database:
    driver: local
  cache:
    driver: local
  caddy_data:
  caddy_config:
